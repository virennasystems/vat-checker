name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      # erlaubt Imports wie "from app.core import ..."
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Debug tree
        run: |
          echo "WORKDIR: $(pwd)"
          git branch --show-current
          ls -la

      - name: Install dependencies (requirements.txt)
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional: Erst aktivieren, wenn du sauberes Packaging hast (nur falls n√∂tig).
      # - name: Install package (pyproject)
      #   if: hashFiles('requirements.txt') == '' && hashFiles('pyproject.toml') != ''
      #   run: pip install .

      - name: Ensure pytest available
        run: pip install pytest

      - name: Run pytest (skip if none)
        run: |
          python -m pytest -q || [ $? -eq 5 ]
